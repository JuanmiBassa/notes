openapi: 3.0.3
info:
  title: Notes API
  version: 1.0.0
security:
  - jwt: []
paths:
  /signup:
    post:
      summary: Register a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User registration successful
        '401':
          description: Unauthorized
        '409':
          description: User with the given username already exists

  /login:
    post:
      summary: Authenticate and generate a JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiration:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized

  /changepassword:
    post:
      summary: Change user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password changed successfully
        '401':
          description: Unauthorized

  /notes:
    get:
      summary: Get a list of notes for the authenticated user
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized

    post:
      summary: Create a new note for the authenticated user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                isVoiceNote:
                  type: boolean
                isPublic:
                  type: boolean
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized

  /notes/{noteId}:
    get:
      summary: Get a specific note by ID
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
        '404':
          description: Note not found

    put:
      summary: Update a specific note by ID
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                isVoiceNote:
                  type: boolean
                isPublic:
                  type: boolean
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
        '404':
          description: Note not found

    delete:
      summary: Delete a specific note by ID
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: integer
      responses:
        '204':
          description: Note deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Note not found
          
  /notes/{noteId}/files:
    get:
      summary: Get a list of files associated with a note
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uri:
                      type: string
                      format: uri
        '401':
          description: Unauthorized
        '404':
          description: Note not found

    post:
      summary: Upload a file for a specific note
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: array
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    format: uri
        '401':
          description: Unauthorized
        '404':
          description: Note not found

  /notes/{noteId}/files/{fileId}:
    get:
      summary: Download a file associated with a note
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: integer
        - name: fileId
          in: path
          required: true
          description: The ID of the file
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized
        '404':
          description: Note or file not found

    delete:
      summary: Delete a file associated with a note
      parameters:
        - name: noteId
          in: path
          required: true
          description: The ID of the note
          schema:
            type: integer
        - name: fileId
          in: path
          required: true
          description: The ID of the file
          schema:
            type: integer
      responses:
        '204':
          description: File deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Note or file not found
components:
  securitySchemes:
    jwt:
      type: apiKey
      in: header
      name: Authorization
      description: Bearer Token for user authentication
  schemas:
    Note:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        createdAt:
          type: string
          format: date
        modifiedAt:
          type: string
          format: date
        title:
          type: string
        body:
          type: string
        isVoiceNote:
          type: boolean
        isPublic:
          type: boolean